{
  "x-generator": "NSwag v13.2.3.0 (NJsonSchema v10.1.5.0 (Newtonsoft.Json v12.0.0.0))",
  "openapi": "3.0.0",
  "info": {
    "title": "FIRE Watch API",
    "contact": {
      "name": "Brenden Black",
      "email": "brendenblack@hotmail.com"
    },
    "version": "v1"
  },
  "paths": {
    "/_configuration/{clientId}": {
      "get": {
        "tags": [
          "OidcConfiguration"
        ],
        "operationId": "OidcConfiguration_GetClientRequestParameters",
        "parameters": [
          {
            "name": "clientId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/octet-stream": {
                "schema": {
                  "type": "string",
                  "format": "binary"
                }
              }
            }
          }
        }
      }
    },
    "/api/transactions/parse": {
      "post": {
        "tags": [
          "Transactions"
        ],
        "operationId": "Transactions_ParseCsv",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          }
        ],
        "requestBody": {
          "x-name": "body",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ParseCsvModel"
              }
            }
          },
          "required": true,
          "x-position": 2
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ParseCsvResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    },
    "/api/transactions": {
      "get": {
        "tags": [
          "Transactions"
        ],
        "operationId": "Transactions_FetchTransactions",
        "parameters": [
          {
            "name": "from",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 1
          },
          {
            "name": "to",
            "in": "query",
            "schema": {
              "type": "string",
              "nullable": true
            },
            "x-position": 2
          }
        ],
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FetchUserTransactionsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      },
      "post": {
        "tags": [
          "Transactions"
        ],
        "operationId": "Transactions_AddTransactions",
        "requestBody": {
          "x-name": "transactions",
          "content": {
            "application/json": {
              "schema": {
                "type": "array",
                "items": {
                  "$ref": "#/components/schemas/AddTransactionModel"
                }
              }
            }
          },
          "required": true,
          "x-position": 1
        },
        "responses": {
          "200": {
            "description": "",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/AddTransactionsResponse"
                }
              }
            }
          }
        },
        "security": [
          {
            "JWT": []
          }
        ]
      }
    }
  },
  "components": {
    "schemas": {
      "ParseCsvResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transactions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TransactionModel"
            }
          }
        }
      },
      "TransactionModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "descriptions": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "duplicateIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "isLikelyDuplicate": {
            "type": "boolean"
          }
        }
      },
      "ParseCsvModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "bank": {
            "type": "string",
            "nullable": true
          },
          "csv": {
            "type": "string",
            "nullable": true
          },
          "duplicates": {
            "type": "boolean"
          }
        }
      },
      "FetchUserTransactionsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "transactions": {
            "type": "array",
            "nullable": true,
            "items": {
              "$ref": "#/components/schemas/TransactionModel2"
            }
          }
        }
      },
      "TransactionModel2": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "descriptions": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "currency": {
            "type": "string",
            "nullable": true
          },
          "accountNumber": {
            "type": "string",
            "nullable": true
          }
        }
      },
      "AddTransactionsResponse": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "createdIds": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "integer",
              "format": "int32"
            }
          }
        }
      },
      "AddTransactionModel": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "accountNumber": {
            "type": "string",
            "nullable": true
          },
          "date": {
            "type": "string",
            "format": "date-time"
          },
          "descriptions": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "tags": {
            "type": "array",
            "nullable": true,
            "items": {
              "type": "string"
            }
          },
          "amount": {
            "type": "number",
            "format": "decimal"
          },
          "currency": {
            "type": "string",
            "nullable": true
          }
        }
      }
    },
    "securitySchemes": {
      "JWT": {
        "type": "apiKey",
        "description": "Type into the textbox: Bearer {your JWT token}.",
        "name": "Authorization",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "JWT": []
    }
  ]
}